// Supabase Configuration
// –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ Supabase Dashboard

const SUPABASE_CONFIG = {
    url: 'https://wpexepphsdzwopltunnn.supabase.co',
    anonKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndwZXhlcHBoc2R6d29wbHR1bm5uIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkzNTQ5MjIsImV4cCI6MjA3NDkzMDkyMn0.qrLKaW7zGNK6ak-Ll3VHq-Qr-2O9b9GOsMu87Lfm5M0',
};

// –ò–ù–°–¢–†–£–ö–¶–ò–Ø:
// 1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –≤ Supabase Dashboard
// 2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí API  
// 3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Project URL –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤–º–µ—Å—Ç–æ 'YOUR_SUPABASE_URL'
// 4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ anon public –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤–º–µ—Å—Ç–æ 'YOUR_SUPABASE_ANON_KEY'

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞
let supabase;

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏)
function initializeSupabase() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Supabase
        if (typeof window.supabase === 'undefined') {
            console.error('‚ùå Supabase library not loaded');
            return null;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
        const client = window.supabase.createClient(
            SUPABASE_CONFIG.url,
            SUPABASE_CONFIG.anonKey
        );
        
        if (!client) {
            console.error('‚ùå Failed to create Supabase client');
            return null;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        supabase = client;
        window.supabase = client; // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º window.supabase –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º
        
        console.log('‚úÖ Supabase client initialized successfully');
        console.log('üîó Supabase URL:', SUPABASE_CONFIG.url);
        
        return client;
        
    } catch (error) {
        console.error('‚ùå Error initializing Supabase:', error);
        return null;
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async function testSupabaseConnection() {
    try {
        const { data, error } = await supabase
            .from('strategies')
            .select('count')
            .limit(1);
            
        if (error) {
            console.error('Supabase connection error:', error);
            return false;
        }
        
        console.log('Supabase connection successful');
        return true;
    } catch (err) {
        console.error('Supabase connection failed:', err);
        return false;
    }
}

// –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    console.log('üîß Initializing Supabase...');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Supabase
    const initSupabase = () => {
        if (typeof window.supabase !== 'undefined' && window.supabase.createClient) {
            try {
                console.log('üîß Creating Supabase client...');
                const client = window.supabase.createClient(
                    SUPABASE_CONFIG.url,
                    SUPABASE_CONFIG.anonKey
                );
                
                if (client && typeof client.from === 'function') {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
                    window.supabase = client;
                    console.log('‚úÖ Supabase client initialized successfully');
                    return true;
                } else {
                    console.error('‚ùå Failed to create Supabase client');
                    return false;
                }
            } catch (error) {
                console.error('‚ùå Error initializing Supabase:', error);
                return false;
            }
        } else {
            console.log('‚è≥ Waiting for Supabase library...');
            setTimeout(initSupabase, 100);
        }
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    setTimeout(initSupabase, 100);
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
window.SUPABASE_CONFIG = SUPABASE_CONFIG;
window.initializeSupabase = initializeSupabase;
window.testSupabaseConnection = testSupabaseConnection;
