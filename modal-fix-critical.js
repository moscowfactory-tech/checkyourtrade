// –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
console.log('üö® Critical modal fix loaded');

// –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    console.log('üö® DOM loaded, initializing critical modal fixes');
    
    // –ü—Ä–æ—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    function openModal(modalId) {
        console.log('üö® Opening modal:', modalId);
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.remove('hidden');
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
            console.log('‚úÖ Modal opened:', modalId);
        } else {
            console.error('‚ùå Modal not found:', modalId);
        }
    }
    
    function closeModal(modalId) {
        console.log('üö® Closing modal:', modalId);
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.remove('active');
            setTimeout(() => {
                modal.classList.add('hidden');
                document.body.style.overflow = 'auto';
            }, 300);
            console.log('‚úÖ Modal closed:', modalId);
        }
    }
    
    // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏
    window.openModal = openModal;
    window.closeModal = closeModal;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"
    const supportButtons = [
        'newSupportProjectBtn',
        'footerSupportProjectBtn'
    ];
    
    supportButtons.forEach(buttonId => {
        const button = document.getElementById(buttonId);
        if (button) {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                console.log('üö® Support button clicked:', buttonId);
                openModal('supportModal');
            });
            console.log('‚úÖ Support button handler added:', buttonId);
        } else {
            console.warn('‚ö†Ô∏è Support button not found:', buttonId);
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ –∞–Ω–∞–ª–∏–∑—ã"
    const myAnalysesBtn = document.getElementById('myAnalysesBtn');
    if (myAnalysesBtn) {
        myAnalysesBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('üö® My analyses button clicked');
            
            // –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫ –∞–Ω–∞–ª–∏–∑–æ–≤
            if (typeof renderAnalysesList === 'function') {
                renderAnalysesList();
            }
            
            openModal('analysesModal');
        });
        console.log('‚úÖ My analyses button handler added');
    } else {
        console.warn('‚ö†Ô∏è My analyses button not found');
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const closeButtons = [
        'closeSupportModalBtn',
        'closeAnalysesModalBtn'
    ];
    
    closeButtons.forEach(buttonId => {
        const button = document.getElementById(buttonId);
        if (button) {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                console.log('üö® Close button clicked:', buttonId);
                
                if (buttonId.includes('Support')) {
                    closeModal('supportModal');
                } else if (buttonId.includes('Analyses')) {
                    closeModal('analysesModal');
                }
            });
            console.log('‚úÖ Close button handler added:', buttonId);
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ backdrop
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('modal-backdrop')) {
            const modal = e.target.closest('.modal');
            if (modal) {
                console.log('üö® Backdrop clicked, closing modal:', modal.id);
                closeModal(modal.id);
            }
        }
    });
    
    console.log('üö® Critical modal fix initialization complete');
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
window.criticalModalFix = true;
