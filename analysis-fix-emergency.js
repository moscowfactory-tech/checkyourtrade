// –≠–ö–°–¢–†–ï–ù–ù–û–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –∞–Ω–∞–ª–∏–∑–∞
console.log('üî• EMERGENCY analysis cards fix loaded');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let analysisFixAttempts = 0;
let analysisFixSuccess = false;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
function emergencyStartAnalysis() {
    console.log('üî• EMERGENCY analysis start attempt #' + (++analysisFixAttempts));
    
    try {
        // –ù–∞—Ö–æ–¥–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const coinInput = document.getElementById('coinInput');
        const strategySelect = document.getElementById('strategySelect');
        const cardAnalysisContainer = document.getElementById('cardAnalysisContainer');
        
        if (!coinInput || !strategySelect || !cardAnalysisContainer) {
            console.error('üî• EMERGENCY: Required elements not found');
            return false;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        const coin = coinInput.value.trim().toUpperCase();
        const strategyId = parseInt(strategySelect.value);
        
        console.log('üî• EMERGENCY: Analysis inputs:', { coin, strategyId });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è
        if (!coin || !strategyId) {
            console.log('üî• EMERGENCY: Missing coin or strategy');
            return false;
        }
        
        // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        let strategy = null;
        if (window.strategies && Array.isArray(window.strategies)) {
            strategy = window.strategies.find(s => s.id === strategyId);
        }
        
        if (!strategy) {
            console.error('üî• EMERGENCY: Strategy not found');
            return false;
        }
        
        console.log('üî• EMERGENCY: Found strategy:', strategy.name);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –Ω–∞–ø—Ä—è–º—É—é
        console.log('üî• EMERGENCY: Directly showing analysis cards');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        window.currentAnalysisStrategy = strategy;
        window.currentCoin = coin;
        window.currentCardIndex = 0;
        window.analysisAnswers = new Array(strategy.fields.length).fill(null);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        cardAnalysisContainer.classList.remove('hidden');
        cardAnalysisContainer.style.display = 'block';
        
        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
        if (typeof window.renderCurrentCard === 'function') {
            window.renderCurrentCard();
            console.log('üî• EMERGENCY: renderCurrentCard called');
        } else {
            console.error('üî• EMERGENCY: renderCurrentCard function not found');
            
            // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞–ø—Ä—è–º—É—é
            const analysisCard = document.getElementById('analysisCard');
            if (analysisCard) {
                analysisCard.classList.add('active');
                analysisCard.style.display = 'block';
                console.log('üî• EMERGENCY: Directly activated analysis card');
            }
        }
        
        analysisFixSuccess = true;
        return true;
    } catch (error) {
        console.error('üî• EMERGENCY: Error starting analysis:', error);
        return false;
    }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ–π
window.emergencyStartAnalysis = emergencyStartAnalysis;

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.addEventListener('DOMContentLoaded', function() {
    console.log('üî• EMERGENCY: DOM loaded, setting up analysis handlers');
    
    // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã
    const coinInput = document.getElementById('coinInput');
    const strategySelect = document.getElementById('strategySelect');
    
    if (coinInput && strategySelect) {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ –º–æ–Ω–µ—Ç—ã
        coinInput.addEventListener('input', function() {
            console.log('üî• EMERGENCY: Coin input changed');
            setTimeout(emergencyStartAnalysis, 500);
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        strategySelect.addEventListener('change', function() {
            console.log('üî• EMERGENCY: Strategy selected');
            setTimeout(emergencyStartAnalysis, 500);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        setTimeout(emergencyStartAnalysis, 1000);
    }
});

console.log('üî• EMERGENCY analysis cards fix initialized');
